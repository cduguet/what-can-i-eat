# Environment Variables Template for "What Can I Eat" Application
#
# Copy this file to .env and fill in your actual values
#
# To get Supabase values:
# 1. Go to https://supabase.com/dashboard
# 2. Create a new project or select existing project
# 3. Go to Settings > API
# 4. Copy the Project URL and anon/public key

# Supabase Configuration (Required)
# Replace with your project URL and anon key from Supabase Settings â†’ API
SUPABASE_URL=https://YOUR-PROJECT.supabase.co
SUPABASE_ANON_KEY=YOUR_SUPABASE_ANON_KEY

# Backend Mode Configuration
# 'supabase' (recommended) uses Supabase Edge Functions to call AI providers.
# 'local' calls AI providers directly from the client (NOT recommended for production).
BACKEND_MODE=supabase

# AI Provider Configuration
# Choose which AI provider to use: 'gemini' or 'vertex'
# If not specified, defaults to 'gemini' for backward compatibility
AI_PROVIDER=gemini

# Gemini API Configuration (only when BACKEND_MODE=local)
# Do not set this in production apps. Keep AI keys server-side.
# GEMINI_API_KEY=your-gemini-api-key-here
# Optional: Custom Gemini endpoint (uses default if not specified)
# GEMINI_ENDPOINT=https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent

# Vertex AI Configuration (only when BACKEND_MODE=local)
# To get Vertex AI values:
# 1. Go to https://console.cloud.google.com/
# 2. Create or select a Google Cloud project
# 3. Enable the Vertex AI API
# 4. Create a service account with Vertex AI permissions
# 5. Download the service account key JSON file
VERTEX_PROJECT_ID=your-google-cloud-project-id
VERTEX_LOCATION=us-central1
# Service account credentials (JSON string or file path)
# Option 1: JSON string (recommended for production)
# VERTEX_CREDENTIALS={"type":"service_account","project_id":"..."}
# Option 2: File path (recommended for development)
# VERTEX_CREDENTIALS=/path/to/service-account-key.json

# Common AI Configuration (Optional)
# Request timeout in milliseconds (default: 30000)
# API_TIMEOUT=30000
# Maximum retry attempts (default: 3)
# MAX_RETRIES=3

# Development Configuration
NODE_ENV=development
